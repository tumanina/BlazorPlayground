@page "/edituser"
@using System.Text.Json
@using BlazorPlayground.Web.Client;
@using BlazorPlayground.Web.Models
@using System.Text
@using Newtonsoft.Json
@inject IClient Client;
@inject NavigationManager NavigationManager;
@attribute [Authorize(Roles = "Write")]

<PageTitle>Add new user</PageTitle>

<h1>Add new Feature to tenant</h1>
<h3 style="color:red">@error</h3>
<EditForm Model="@userToEdit" OnSubmit="@HandleSubmit">
    <table>
        <tr>
            <td>
                <label>Name</label>
            </td>
            <td>
                <InputText DisplayName="Name" @bind-Value="userToEdit.Name" />
            </td>
        </tr>
    </table>
    <br />
    <button type="submit">Edit User</button>
    <br />
    <a href=@($"users")>Back to Users</a>
</EditForm>

@code {
    [Parameter]
    [SupplyParameterFromQuery]
    public Guid Id { get; set; }
    private User userToEdit = new();
    private string error = "";
    private bool shouldRender;

    protected override bool ShouldRender() => shouldRender;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            userToEdit = await Client.GetUserByIdAsync(Id);
        }
        catch (ClientException ex)
        {
            error = ex.Message;
        }

        shouldRender = true;
    }

    private async void HandleSubmit()
    {
        try
        {
            await Client.CreateOrUpdateUser(userToEdit);
            NavigationManager.NavigateTo($"users");
        }
        catch (ClientException ex)
        {
            error = ex.Message;
            shouldRender = true;
        }
    }
}
